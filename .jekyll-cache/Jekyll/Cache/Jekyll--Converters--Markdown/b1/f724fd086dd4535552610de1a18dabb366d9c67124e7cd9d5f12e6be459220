I"<p><a href="/file.axd?file=WcfServiceExample.zip">WcfServiceExample.zip (7.57 mb)</a></p>

<p> </p>

<p>The above example uses <a href="http://www.castleproject.org/container/facilities/trunk/wcf/index.html" title="http://www.castleproject.org/container/facilities/trunk/wcf/index.html">Windows Communication Foundation (WCF) Integration Facility</a></p>

<p>The main idea here is that WCF should get the service instances from Windsor, which gives us all the usual advantages of <a href="http://en.wikipedia.org/wiki/Inversion_of_control" title="http://en.wikipedia.org/wiki/Inversion_of_control">IoC</a> <em>plus Windsor’s interceptors</em> capabilities. It isn’t a lot of code, but it makes it <em>much</em> easier to work with WCF services.</p>

<p>The service contains 2 simple methods on the HelloWorld class.</p>

<p>--  SayHello – returns a string “Hello World” –  ThrowException – throws an exception</p>

<p>Every single call to each of these is intercepted and logged.  Whilst the throw exception will always be caught by the exceptionhandler interceptor.</p>

<p>The first project in the solution is the WCF service, whilst the second is just a WPF client tester. The project outlook is as follows:</p>

<p><img src="images/image.axd?picture=WCF-1.png" alt="" /></p>
:ET