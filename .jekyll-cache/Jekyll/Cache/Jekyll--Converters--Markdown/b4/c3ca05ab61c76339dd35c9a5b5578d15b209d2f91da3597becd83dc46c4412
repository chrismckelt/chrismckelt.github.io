I"]<p>Often we need a fresh copy of the production database in another environment (eg DEV/TEST/UAT). </p>

<p>Previously this was a tedious task involving getting a backup file, copying it to another location, restoring the database.   Here is a solution to automate this process using Azure Pipelines.</p>

<h3 id="user-story">User Story</h3>

<p>Given a production database exists in subscription 1<br />
When we do a release of the Azure Pipeline named ‘<em>Refresh Database – DEV’</em><br />
Then an copy of production is available in the DEV environment in subscription 2<br />
And permissions are correct for the DEV environment</p>

<h2 id="pipeline-overview">Pipeline Overview</h2>

<p>For each environment that you wish to restore into create an Azure Pipeline with 3 stages.</p>

<p><img src="https://user-images.githubusercontent.com/662868/120557271-3fa22f80-c430-11eb-906c-2475ac31de34.png" alt="image" /></p>

<p>Create variable groups that are <strong>scoped to specific stages</strong></p>

<p>Each variable group contains deployment credentials that the specific stage will require to perform operations within the specific Azure Subscription.</p>

<p><a href="https://raw.githubusercontent.com/chrismckelt/chrismckelt.github.io/master/_posts/posts/images/2019/08/image-8.png"><img src="https://raw.githubusercontent.com/chrismckelt/chrismckelt.github.io/master/_posts/posts/images/image_thumb-8.png" alt="image" title="image" /></a></p>

<h3 id="task-1---export">Task 1 - Export</h3>

<p>Create a PowerShell task to run a script and pass it the information for the production environment.</p>

<p>This runs against the production environment and creates a blog storage container that holds the exported BACPAC</p>

<p><a href="https://raw.githubusercontent.com/chrismckelt/chrismckelt.github.io/master/_posts/posts/images/2019/08/image-9.png"><img src="https://raw.githubusercontent.com/chrismckelt/chrismckelt.github.io/master/_posts/posts/images/image_thumb-9.png" alt="image" title="image" /></a></p>

<h6 id="view-code-for-script-production-exportps1"><a href="https://gist.github.com/chrismckelt/cc3c2ea53d8500b7c02e3da43513cbae">View code for script production-export.ps1</a></h6>

<script src="https://gist.github.com/chrismckelt/cc3c2ea53d8500b7c02e3da43513cbae.js"></script>

<h3 id="results-in-production-once-this-script-run-should-show-the-database-bacpac-export">Results in production once this script run should show the database BACPAC export</h3>

<h3><a href="https://raw.githubusercontent.com/chrismckelt/chrismckelt.github.io/master/_posts/posts/images/2019/08/image-10.png"><img src="https://raw.githubusercontent.com/chrismckelt/chrismckelt.github.io/master/_posts/posts/images/image_thumb-10.png" alt="image" title="image" /></a></h3>

<h3 id="task-2--import">Task 2 – Import</h3>

<p>Under the ‘import’ stage create a task that will import the BACPAC from the storage container in the production subscription.  This uses both production and the environment credentials.</p>

<p><a href="https://raw.githubusercontent.com/chrismckelt/chrismckelt.github.io/master/_posts/posts/images/2019/08/image-11.png"><img src="https://raw.githubusercontent.com/chrismckelt/chrismckelt.github.io/master/_posts/posts/images/image_thumb-11.png" alt="image" title="image" /></a></p>

<h6 id="view-code-for-script-production-importps1"><a href="https://gist.github.com/chrismckelt/629f992935f9a6aa6701e2c69ae49358">View code for script production-import.ps1</a></h6>

<script src="https://gist.github.com/chrismckelt/629f992935f9a6aa6701e2c69ae49358.js"></script>

<h3 id="task-3--sanitise">Task 3 – Sanitise</h3>

<p>Create a 3rd task in the ‘Sanitise’ stage. </p>

<p>This will scramble any  information you do not want in that environment (eg emails).</p>

<p>Also remove any Production SQL user account and replace them with environment specific</p>

<h6 id="view-code-for-script-sanitise"><a href="https://gist.github.com/chrismckelt/f1dcefb52db6e79b8e5514853067e774">View code for script sanitise</a></h6>

<script src="https://gist.github.com/chrismckelt/f1dcefb52db6e79b8e5514853067e774.js"></script>

<hr />

<h2 id="tada">TADA!</h2>

<p>Running the pipeline now copies the database to the DEV environment. Typically after this will run a software build which will automatically apply schema changes currently in DEV in the database. Happy restoring!</p>

<p><a href="https://raw.githubusercontent.com/chrismckelt/chrismckelt.github.io/master/_posts/posts/images/2019/08/image-13.png"><img src="https://raw.githubusercontent.com/chrismckelt/chrismckelt.github.io/master/_posts/posts/images/image_thumb-13.png" alt="image" title="image" /></a></p>
:ET